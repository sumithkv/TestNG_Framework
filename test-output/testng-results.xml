<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="33" failed="14" ignored="1" total="86" passed="38">
  <reporter-output>
  </reporter-output>
  <suite name="MyTestSuite" duration-ms="9519" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:38Z">
    <groups>
      <group name="security">
        <method signature="DependsOnGroupsTest.accessAdminPage()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="accessAdminPage" class="myTestNG.DependsOnGroupsTest"/>
        <method signature="DependsOnGroupsTest.accessHomePage()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="accessHomePage" class="myTestNG.DependsOnGroupsTest"/>
      </group> <!-- security -->
      <group name="database">
        <method signature="DependsOnGroupsTest.testDelete()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="testDelete" class="myTestNG.DependsOnGroupsTest"/>
        <method signature="DependsOnGroupsTest.testInsert()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="testInsert" class="myTestNG.DependsOnGroupsTest"/>
        <method signature="DependsOnGroupsTest.testUpdate()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="testUpdate" class="myTestNG.DependsOnGroupsTest"/>
      </group> <!-- database -->
      <group name="ui">
        <method signature="DependsOnGroupsTest.openConfirmationDialog()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="openConfirmationDialog" class="myTestNG.DependsOnGroupsTest"/>
        <method signature="DependsOnGroupsTest.openFileDialog()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="openFileDialog" class="myTestNG.DependsOnGroupsTest"/>
      </group> <!-- ui -->
      <group name="Regression">
        <method signature="GroupTest.f2()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f2" class="myTestNG.GroupTest"/>
        <method signature="GroupTest.f5()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f5" class="myTestNG.GroupTest"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="GroupTest.f1()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f1" class="myTestNG.GroupTest"/>
        <method signature="GroupTest.f4()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f4" class="myTestNG.GroupTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Test111" duration-ms="155" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
      <class name="myTestNG.TestNGTestClass">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:myTestNG.TestNGTestClass@52f759d7]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:myTestNG.TestNGTestClass@52f759d7]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- myTestNG.TestNGTestClass -->
      <class name="myTestNG.TestMsg1">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCalculatorMsg1()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="testCalculatorMsg1" duration-ms="3" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCalculatorMsg2()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="testCalculatorMsg2" duration-ms="7" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.TestMsg1@192d3247]" name="afterClass" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.TestMsg1 -->
      <class name="myTestNG.TestMsg">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCalculatorMsg1()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="testCalculatorMsg1" duration-ms="27" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCalculatorMsg2()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="testCalculatorMsg2" duration-ms="2" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testCalculatorMsg3()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="testCalculatorMsg3" duration-ms="2" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[M1 and M2 are Equal expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: M1 and M2 are Equal expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.TestMsg.testCalculatorMsg3(TestMsg.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="testCalculatorMsg3()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="testCalculatorMsg3" duration-ms="2" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[M1 and M2 are Equal expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: M1 and M2 are Equal expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.TestMsg.testCalculatorMsg3(TestMsg.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg3 -->
        <test-method status="SKIP" signature="testCalculatorMsg3()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="testCalculatorMsg3" duration-ms="2" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[M1 and M2 are Equal expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: M1 and M2 are Equal expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.TestMsg.testCalculatorMsg3(TestMsg.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testCalculatorMsg3()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="testCalculatorMsg3" duration-ms="8" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[M1 and M2 are Equal expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: M1 and M2 are Equal expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.TestMsg.testCalculatorMsg3(TestMsg.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculatorMsg3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.TestMsg@7cbd213e]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.TestMsg -->
    </test> <!-- Test111 -->
    <test name="Test222" duration-ms="8588" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:37Z">
      <class name="myTestNG.DependsOnGroupsTest">
        <test-method status="PASS" signature="setUpSecurity()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="setUpSecurity" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSecurity -->
        <test-method status="SKIP" signature="accessAdminPage()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="accessAdminPage" duration-ms="15" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
at myTestNG.DependsOnGroupsTest.accessAdminPage(DependsOnGroupsTest.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAdminPage -->
        <test-method status="SKIP" signature="accessAdminPage()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="accessAdminPage" duration-ms="2" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
at myTestNG.DependsOnGroupsTest.accessAdminPage(DependsOnGroupsTest.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAdminPage -->
        <test-method status="SKIP" signature="accessAdminPage()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="accessAdminPage" duration-ms="3" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
at myTestNG.DependsOnGroupsTest.accessAdminPage(DependsOnGroupsTest.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAdminPage -->
        <test-method status="FAIL" signature="accessAdminPage()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="accessAdminPage" duration-ms="3" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
at myTestNG.DependsOnGroupsTest.accessAdminPage(DependsOnGroupsTest.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAdminPage -->
        <test-method status="PASS" signature="accessHomePage()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="accessHomePage" duration-ms="105" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessHomePage -->
        <test-method status="PASS" signature="tearDownSecurity()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="tearDownSecurity" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSecurity -->
        <test-method status="PASS" signature="setUpUI()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="setUpUI" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpUI -->
        <test-method status="PASS" signature="openConfirmationDialog()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="openConfirmationDialog" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openConfirmationDialog -->
        <test-method status="PASS" signature="openFileDialog()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="openFileDialog" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openFileDialog -->
        <test-method status="PASS" signature="tearDownUI()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="tearDownUI" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownUI -->
        <test-method status="PASS" signature="setUpDatabase()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="setUpDatabase" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDatabase -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="testDelete" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="testInsert()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="testInsert" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsert -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="testUpdate" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="tearDownDatabase()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="tearDownDatabase" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownDatabase -->
        <test-method status="SKIP" signature="backendGroupDependentTest1()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="backendGroupDependentTest1" duration-ms="0" depends-on-groups="security, database" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnGroupsTest.backendGroupDependentTest1()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e] depends on not successfully finished methods in group "security"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnGroupsTest.backendGroupDependentTest1()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e] depends on not successfully finished methods in group "security"
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backendGroupDependentTest1 -->
        <test-method status="PASS" signature="backendGroupDependentTest2()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="backendGroupDependentTest2" duration-ms="1" depends-on-groups="security, database" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backendGroupDependentTest2 -->
        <test-method status="PASS" signature="uiGroupDependentTest()[pri:0, instance:myTestNG.DependsOnGroupsTest@3578436e]" name="uiGroupDependentTest" duration-ms="0" depends-on-groups="ui" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uiGroupDependentTest -->
      </class> <!-- myTestNG.DependsOnGroupsTest -->
      <class name="myTestNG.TestNGTestClass">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:myTestNG.TestNGTestClass@43a0cee9]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:myTestNG.TestNGTestClass@43a0cee9]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- myTestNG.TestNGTestClass -->
      <class name="myTestNG.ExceptionTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test1" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test1" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test1" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test1" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test1()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of type class java.lang.IllegalArgumentException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test2" duration-ms="3" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[24 is less than 36]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: 24 is less than 36
at myTestNG.Calculator.div(Calculator.java:61)
at myTestNG.ExceptionTest.test2(ExceptionTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="test3()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test3" duration-ms="5" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalArgumentException: 24 is less than 36
at myTestNG.Calculator.div(Calculator.java:61)
at myTestNG.ExceptionTest.test3(ExceptionTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="test3()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test3" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalArgumentException: 24 is less than 36
at myTestNG.Calculator.div(Calculator.java:61)
at myTestNG.ExceptionTest.test3(ExceptionTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="test3()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test3" duration-ms="4" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalArgumentException: 24 is less than 36
at myTestNG.Calculator.div(Calculator.java:61)
at myTestNG.ExceptionTest.test3(ExceptionTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="test3()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test3" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.ArithmeticException but got java.lang.IllegalArgumentException: 24 is less than 36
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalArgumentException: 24 is less than 36
at myTestNG.Calculator.div(Calculator.java:61)
at myTestNG.ExceptionTest.test3(ExceptionTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="5" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test4()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test4" duration-ms="3" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at myTestNG.Calculator.div(Calculator.java:64)
at myTestNG.ExceptionTest.test4(ExceptionTest.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test5" duration-ms="3" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[-8 is less than 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: -8 is less than 0
at myTestNG.Calculator.div(Calculator.java:61)
at myTestNG.ExceptionTest.test5(ExceptionTest.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test6" duration-ms="7" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test6" duration-ms="2" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test6" duration-ms="2" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="test6" duration-ms="3" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ExceptionTest.test6()[pri:0, instance:myTestNG.ExceptionTest@2eda0940] should have thrown an exception of any of types [class java.lang.ArithmeticException, class java.lang.IllegalArgumentException]
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)
at org.testng.internal.Invoker.considerExceptions(Invoker.java:1140)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:615)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.ExceptionTest@2eda0940]" name="afterClass" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.ExceptionTest -->
      <class name="myTestNG.TimeoutTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="timeFailMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="timeFailMethod" duration-ms="1044" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:30Z">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000
at myTestNG.TimeoutTest.timeFailMethod(TimeoutTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeFailMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:30Z" finished-at="2018-11-24T03:27:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:30Z" finished-at="2018-11-24T03:27:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="timeFailMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="timeFailMethod" duration-ms="1003" started-at="2018-11-24T03:27:30Z" finished-at="2018-11-24T03:27:31Z">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000
at myTestNG.TimeoutTest.timeFailMethod(TimeoutTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeFailMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:31Z" finished-at="2018-11-24T03:27:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="timeFailMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="timeFailMethod" duration-ms="1005" started-at="2018-11-24T03:27:31Z" finished-at="2018-11-24T03:27:32Z">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000
at myTestNG.TimeoutTest.timeFailMethod(TimeoutTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeFailMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:31Z" finished-at="2018-11-24T03:27:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="afterMethod" is-config="true" duration-ms="3" started-at="2018-11-24T03:27:32Z" finished-at="2018-11-24T03:27:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:32Z" finished-at="2018-11-24T03:27:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="timeFailMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="timeFailMethod" duration-ms="1014" started-at="2018-11-24T03:27:32Z" finished-at="2018-11-24T03:27:33Z">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method myTestNG.TimeoutTest.timeFailMethod() didn't finish within the time-out 1000
at myTestNG.TimeoutTest.timeFailMethod(TimeoutTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeFailMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:33Z" finished-at="2018-11-24T03:27:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="beforeMethod" is-config="true" duration-ms="6" started-at="2018-11-24T03:27:33Z" finished-at="2018-11-24T03:27:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="timePassMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="timePassMethod" duration-ms="4040" started-at="2018-11-24T03:27:33Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timePassMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.TimeoutTest@eb21112]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.TimeoutTest -->
      <class name="myTestNG.DependsOnMethodsTest">
        <test-method status="PASS" signature="div()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="div" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="greater()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="greater" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[????? Failing this Test ?????]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ????? Failing this Test ?????
at org.testng.Assert.fail(Assert.java:96)
at myTestNG.DependsOnMethodsTest.greater(DependsOnMethodsTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greater -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="greater()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="greater" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[????? Failing this Test ?????]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ????? Failing this Test ?????
at org.testng.Assert.fail(Assert.java:96)
at myTestNG.DependsOnMethodsTest.greater(DependsOnMethodsTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greater -->
        <test-method status="SKIP" signature="greater()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="greater" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[????? Failing this Test ?????]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ????? Failing this Test ?????
at org.testng.Assert.fail(Assert.java:96)
at myTestNG.DependsOnMethodsTest.greater(DependsOnMethodsTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greater -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="greater()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="greater" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[????? Failing this Test ?????]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ????? Failing this Test ?????
at org.testng.Assert.fail(Assert.java:96)
at myTestNG.DependsOnMethodsTest.greater(DependsOnMethodsTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greater -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="lesser()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="lesser" duration-ms="1" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lesser -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="add()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="add" duration-ms="0" started-at="2018-11-24T03:27:37Z" depends-on-methods="myTestNG.DependsOnMethodsTest.greater" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnMethodsTest.add()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnMethodsTest.add()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add -->
        <test-method status="SKIP" signature="mul()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="mul" duration-ms="0" started-at="2018-11-24T03:27:37Z" depends-on-methods="myTestNG.DependsOnMethodsTest.lesser, myTestNG.DependsOnMethodsTest.greater" finished-at="2018-11-24T03:27:37Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnMethodsTest.mul()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnMethodsTest.mul()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mul -->
        <test-method status="PASS" signature="sub()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="sub" duration-ms="35" started-at="2018-11-24T03:27:37Z" depends-on-methods="myTestNG.DependsOnMethodsTest.lesser" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.DependsOnMethodsTest@706a04ae]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:37Z" finished-at="2018-11-24T03:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.DependsOnMethodsTest -->
    </test> <!-- Test222 -->
    <test name="Test333" duration-ms="18" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
      <class name="myTestNG.TestNGGroupClass">
        <test-method status="PASS" signature="smokeSetUp()[pri:0, instance:myTestNG.TestNGGroupClass@197d671]" name="smokeSetUp" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeSetUp -->
        <test-method status="PASS" signature="regressionSetUp()[pri:0, instance:myTestNG.TestNGGroupClass@197d671]" name="regressionSetUp" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionSetUp -->
        <test-method status="PASS" signature="smokeTearDown()[pri:0, instance:myTestNG.TestNGGroupClass@197d671]" name="smokeTearDown" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTearDown -->
        <test-method status="PASS" signature="regressionTearDown()[pri:0, instance:myTestNG.TestNGGroupClass@197d671]" name="regressionTearDown" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTearDown -->
      </class> <!-- myTestNG.TestNGGroupClass -->
      <class name="myTestNG.GroupTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="f1()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f1" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method status="PASS" signature="f2()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f2" duration-ms="4" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method status="PASS" signature="f4()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f4" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f4 -->
        <test-method status="PASS" signature="f5()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="f5" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f5 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.GroupTest@78186a70]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.GroupTest -->
    </test> <!-- Test333 -->
    <test name="Test444" duration-ms="230" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
      <class name="myTestNG.TestNGTestClass">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:myTestNG.TestNGTestClass@319b92f3]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:myTestNG.TestNGTestClass@319b92f3]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- myTestNG.TestNGTestClass -->
      <class name="myTestNG.CalculatorDataProviderTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [60]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [60]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="5" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [60]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [60]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [60]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [60]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="72" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [60]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [60]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="2" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="3" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [3]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [3]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="2" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [19] but found [11]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [19] but found [11]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [19] but found [11]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [19] but found [11]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at myTestNG.CalculatorDataProviderTest.addNumbers(CalculatorDataProviderTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="addNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataAdd" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mulNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="mulNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataMul" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mulNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="mulNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataMul" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mulNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="mulNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataMul" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[MULTIPLICATION FAILED expected [36] but found [21]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: MULTIPLICATION FAILED expected [36] but found [21]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at myTestNG.CalculatorDataProviderTest.mulNumbers(CalculatorDataProviderTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="mulNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="mulNumbers" duration-ms="8" started-at="2018-11-24T03:27:38Z" data-provider="dataMul" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[MULTIPLICATION FAILED expected [36] but found [21]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: MULTIPLICATION FAILED expected [36] but found [21]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at myTestNG.CalculatorDataProviderTest.mulNumbers(CalculatorDataProviderTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="mulNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="mulNumbers" duration-ms="0" started-at="2018-11-24T03:27:38Z" data-provider="dataMul" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[MULTIPLICATION FAILED expected [36] but found [21]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: MULTIPLICATION FAILED expected [36] but found [21]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at myTestNG.CalculatorDataProviderTest.mulNumbers(CalculatorDataProviderTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="mulNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="mulNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataMul" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[MULTIPLICATION FAILED expected [36] but found [21]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: MULTIPLICATION FAILED expected [36] but found [21]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at myTestNG.CalculatorDataProviderTest.mulNumbers(CalculatorDataProviderTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mulNumbers(int, int, int)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="mulNumbers" duration-ms="41" started-at="2018-11-24T03:27:38Z" data-provider="dataMul" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="printMessage(java.lang.String)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="printMessage" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataMsg" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Welcome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printMessage -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="printMessage(java.lang.String)[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="printMessage" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="dataMsg" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Thank You]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printMessage -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.CalculatorDataProviderTest@27d415d9]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.CalculatorDataProviderTest -->
      <class name="myTestNG.DataProviderTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="myFunction(int, java.lang.String, int)[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="myFunction" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="testDataProvider" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sumith]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[33333]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFunction -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="myFunction(int, java.lang.String, int)[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="myFunction" duration-ms="5" started-at="2018-11-24T03:27:38Z" data-provider="testDataProvider" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Suyog]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[66666]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFunction -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="myFunction(int, java.lang.String, int)[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="myFunction" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="testDataProvider" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Saurabh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[99999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFunction -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="myFunction(int, java.lang.String, int)[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="myFunction" duration-ms="0" started-at="2018-11-24T03:27:38Z" data-provider="testDataProvider" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deepak]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[44444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFunction -->
        <test-method status="PASS" signature="myFunction(int, java.lang.String, int)[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="myFunction" duration-ms="1" started-at="2018-11-24T03:27:38Z" data-provider="testDataProvider" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bageesh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[77777]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFunction -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.DataProviderTest@fcd6521]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.DataProviderTest -->
    </test> <!-- Test444 -->
    <test name="Test555" duration-ms="16" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
      <class name="myTestNG.TestNGTestClass">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:myTestNG.TestNGTestClass@5fdba6f9]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:myTestNG.TestNGTestClass@5fdba6f9]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- myTestNG.TestNGTestClass -->
      <class name="myTestNG.ParameterTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="compareNumbers(int, int, int)[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="compareNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Num1 < Num2 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Num1 < Num2 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.ParameterTest.compareNumbers(ParameterTest.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="compareNumbers(int, int, int)[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="compareNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Num1 < Num2 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Num1 < Num2 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.ParameterTest.compareNumbers(ParameterTest.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="compareNumbers(int, int, int)[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="compareNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Num1 < Num2 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Num1 < Num2 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.ParameterTest.compareNumbers(ParameterTest.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="compareNumbers(int, int, int)[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="compareNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Num1 < Num2 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Num1 < Num2 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at myTestNG.ParameterTest.compareNumbers(ParameterTest.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="divNumbers(int, int, int)[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="divNumbers" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divNumbers -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sameHeap(int, int, int)[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="sameHeap" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sameHeap -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myTestNG.ParameterTest@10d59286]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- myTestNG.ParameterTest -->
      <class name="myTestNG.TestNGSuitClass">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:myTestNG.TestNGSuitClass@b3d7190]" name="beforeSuite" is-config="true" duration-ms="16" started-at="2018-11-24T03:27:29Z" finished-at="2018-11-24T03:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:myTestNG.TestNGSuitClass@b3d7190]" name="afterSuite" is-config="true" duration-ms="1" started-at="2018-11-24T03:27:38Z" finished-at="2018-11-24T03:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- myTestNG.TestNGSuitClass -->
    </test> <!-- Test555 -->
  </suite> <!-- MyTestSuite -->
</testng-results>
